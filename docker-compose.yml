version: '3.8'

services:
  api:
    build:
      context: ./src/backend/BookingPro.API
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=${DATABASE_URL:-Host=host.docker.internal;Port=5432;Database=bookingprodb;Username=postgres;Password=eric1234}
      - Jwt__Key=${JWT_KEY:-your-secret-key-here-minimum-32-characters-long}
      - FrontendUrl=http://localhost:3001
      - SEED_DATA=true
      - MercadoPago__ClientId=8910659199325958
      - MercadoPago__ClientSecret=tXQ2jMYukAGjlLe4RwS6aC3XXdPzwqKv
      - MercadoPago__AccessToken=APP_USR-8910659199325958-082907-f0d77b54c6f145eae906dccce69ed282-90448573
      - MercadoPago__RedirectUri=${MERCADOPAGO_REDIRECT_URI:-http://localhost:5001/api/mercadopago/callback}
      - MercadoPago__WebhookUrl=${MERCADOPAGO_WEBHOOK_URL:-http://localhost:5001/api/webhooks/mercadopago}
    # Redis dependency removed
    networks:
      - bookingpro-network

  client:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5001/api
      - REACT_APP_APP_NAME=BookingPro
    depends_on:
      - api
    networks:
      - bookingpro-network
    volumes:
      - ./src/frontend:/app
      - /app/node_modules


  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api
  #     - client
  #   networks:
  #     - bookingpro-network

networks:
  bookingpro-network:
    driver: bridge

# Note: PostgreSQL debe estar instalado externamente
# Para conectar con PostgreSQL externo, asegúrate de:
# 1. Tener PostgreSQL corriendo en el host
# 2. Configurar la variable DATABASE_URL con la conexión correcta
# 3. Permitir conexiones desde Docker (host.docker.internal)